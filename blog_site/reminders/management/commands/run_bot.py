import telebot
from os import getenv
from dotenv import load_dotenv
from django.core.management.base import BaseCommand
from django.core.exceptions import ObjectDoesNotExist
from reminders.models import Month, Day, Birthday_boy, TelegramCod, Reminder
from user_reminders.models import SiteUser

load_dotenv()

TOKEN = getenv('token')
bot = telebot.TeleBot(TOKEN)

month_list = ['–Ø–Ω–≤–∞—Ä—è', '–§–µ–≤—Ä–∞–ª—è', '–ú–∞—Ä—Ç–∞', '–ê–ø—Ä–µ–ª—è', '–ú–∞—è', '–ò—é–Ω—è', '–ò—é–ª—è', '–ê–≤–≥—É—Å—Ç–∞', '–°–µ–Ω—Ç—è–±—Ä—è',
              '–û–∫—Ç—è–±—Ä—è', '–ù–æ—è–±—Ä—è', '–î–µ–∫–∞–±—Ä—è']


class Command(BaseCommand):

    def handle(self, *args, **options):
        add_bot()


@bot.message_handler(commands=['help'])
def examination(message):
    # print(message)
    bot.reply_to(message, '–∫–æ–º–∞–Ω–¥—ã:\nstart - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è\n'
                          'help - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n'
                          'birthday - –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–º–µ–Ω–∏–Ω–Ω–∏–∫–æ–≤\n'
                          'reminder - –í–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è\n'
                          '--------------------------------\n'
                          '–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∏–º–µ–Ω–∏–Ω–Ω–∏–∫–æ–≤:\n*\n'
                          '–≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ\n'
                          '—Ñ–∞–º–∏–ª–∏—è –∏–º—è —á–∏—Å–ª–æ –º–µ—Å—è—Ü\n–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω 1 10\n'
                          '---------------------------------- \n'
                          '–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π, –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π:\n*\n'
                          '–≤ —Å–∫–æ–±–∫–∞—Ö –≤–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∑–∞—Ç–µ–º —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª —á–∏—Å–ª–æ –∏ –º–µ—Å—è—Ü \n'
                          '(—Å–æ–æ–±—â–µ–Ω–∏–µ) 1 10\n'
                          'ü§ù')


@bot.message_handler(commands=['start'])
def examination(message):
    # print(message)
    hey = message.from_user.first_name
    bot.reply_to(message, f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {hey}\n'
                          f'-------------------------------- \n'
                          f'–í–∞—à –∫–æ–¥ –¥–ª—è —Å–∞–π—Ç–∞ {message.chat.id}\n'
                          f'üëã')
    # print(message.chat.id)
    TelegramCod.objects.get_or_create(telegram_cod=message.chat.id)
    for mot in month_list:
        Month.objects.get_or_create(month=mot)
    for d in range(1, 32):
        Day.objects.get_or_create(day=d)


@bot.message_handler(commands=['birthday'])
def birthday(message):
    # print(message)
    user_chat = SiteUser.objects.get(user_chat=message.chat.id)
    birthday = Birthday_boy.objects.filter(user=user_chat)
    for i in birthday:
        chat_id = message.chat.id
        bot.send_message(chat_id, i)


@bot.message_handler(commands=['reminder'])
def reminder(message):
    user_chat = SiteUser.objects.get(user_chat=message.chat.id)
    reminder = Reminder.objects.filter(user=user_chat)
    for i in reminder:
        chat_id = message.chat.id
        bot.send_message(chat_id, i)


def add_bot():
    @bot.message_handler(content_types=['text'])
    def send_text(message):
        chat_id = message.chat.id
        if '(' in message.text and ')' in message.text:
            mess_remind = message.text[message.text.find('(') + 1:message.text.find(')')]
            info_rem = (message.text).split()

            info = [mess_remind, info_rem[-2], info_rem[-1]]

            info_rem.clear()

        else:
            info = (message.text.title().split())
        try:
            day = Day.objects.get(day=info[-2])
            id = Month.objects.get(id=info[-1])
            user_chat = SiteUser.objects.get(user_chat=message.chat.id)

            if len(info) == 4:

                surname_name = Birthday_boy.objects.filter(user=user_chat, surname=info[0], name=info[1]).first()
                if not surname_name:
                    Birthday_boy.objects.create(month=id, day=day, name=info[1], surname=info[0]).user.add(user_chat.id)
                    bot.send_message(chat_id, '–ò–º–µ–Ω–∏–Ω–Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω üòä')
                else:
                    bot.send_message(chat_id, '–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Ç–∞–∫–æ–π –∏–º–µ–Ω–∏–Ω–Ω–∏–∫\n–Ω—É–∂–Ω–æ —Å–º–µ–Ω–∏—Ç—å —Ñ–∞–º–∏–ª–∏—é –∏–ª–∏ –∏–º—è')

            elif len(info) == 3:
                Reminder.objects.create(month=id, day=day, reminder=info[0]).user.add(user_chat.id)
                bot.send_message(chat_id, '–î–æ–±–∞–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ üòä')

            else:
                bot.send_message(chat_id, '–ù–µ –≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞! üòî')
                bot.send_message(chat_id, '–¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –≤–≤–æ–¥–µ\n'
                                          ' –Ω—É–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–µ –∫–æ–º–∞–Ω–¥—É (–∏—Ñ–æ—Ä–º–∞—Ü–∏—è)/help')

        except ValueError:
            bot.send_message(chat_id, '–ù–µ—Ç –¥–∞—Ç—ã –∏–ª–∏ –¥–∞—Ç–∞ –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ —Ü–∏—Ñ—Ä–∞–º–∏ üòî')
        except ObjectDoesNotExist:
            bot.send_message(chat_id, '–ù–µ –≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥ –î–ù–Ø –∏–ª–∏ –ú–ï–°–Ø–¶–ê —Ä–æ–∂–¥–µ–Ω–∏—è üòî')
        except IndexError:
            bot.send_message(chat_id, '–ù–µ –≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞ üòî\n'
                                '–≤—Å–µ–≥–æ –æ–¥–Ω–æ —Å–ª–æ–≤–æ –∏–ª–∏ –±—É–∫–≤–∞')

        info.clear()

    bot.polling()
