import telebot
from os import getenv
from dotenv import load_dotenv
from django.core.management.base import BaseCommand
from django.core.exceptions import ObjectDoesNotExist
from reminders.models import Month, Day, Birthday_boy, User

load_dotenv()

TOKEN = getenv('token')
bot = telebot.TeleBot(TOKEN)

month_list = ['–Ø–Ω–≤–∞—Ä—è', '–§–µ–≤—Ä–∞–ª—è', '–ú–∞—Ä—Ç–∞', '–ê–ø—Ä–µ–ª—è', '–ú–∞—è', '–ò—é–Ω—è', '–ò—é–ª—è', '–ê–≤–≥—É—Å—Ç–∞', '–°–µ–Ω—Ç—è–±—Ä—è',
              '–û–∫—Ç—è–±—Ä—è', '–ù–æ—è–±—Ä—è', '–î–µ–∫–∞–±—Ä—è']


class Command(BaseCommand):


    def handle(self, *args, **options):
        add_bot()


@bot.message_handler(commands=['help'])
def examination(message):
    # print(message)
    bot.reply_to(message, '–∫–æ–º–∞–Ω–¥—ã:\nstart - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è\n'
                          'help - –ü–æ–º–æ—â—å\n'
                          'birthday - –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–º–µ–Ω–∏–Ω–Ω–∏–∫–æ–≤\n'
                          '--------------------------------\n'
                          '–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∏–º–µ–Ω–∏–Ω–Ω–∏–∫–æ–≤ \n'
                          '–≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ\n'
                          '(—Ñ–∞–º–∏–ª–∏—è –∏–º—è —á–∏—Å–ª–æ –º–µ—Å—è—Ü)\n(–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω 1 10)\n'
                          'ü§ù')


@bot.message_handler(commands=['start'])
def examination(message):
    # print(message)
    hey = message.from_user.first_name
    bot.reply_to(message, f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {hey}\n'
                          f'-------------------------------- \n'
                          f'–í–∞—à –∫–æ–¥ –¥–ª—è —Å–∞–π—Ç–∞ {message.chat.id}\n'
                          f'üëã')
    # print(message.chat.id)
    User.objects.get_or_create(user_name=hey, user_chat=message.chat.id)
    for mot in month_list:
        Month.objects.get_or_create(month=mot)
    for d in range(1, 32):
        Day.objects.get_or_create(day=d)


@bot.message_handler(commands=['birthday'])
def birthday(message):
    # print(message)
    user_chat = User.objects.get(user_chat=message.chat.id)
    birthday = Birthday_boy.objects.filter(user=user_chat)
    for i in birthday:
        chat_id = message.chat.id
        bot.send_message(chat_id, i)


def add_bot():
    @bot.message_handler(content_types=['text'])
    def send_text(message):
        info = (message.text.title().split())
        chat_id = message.chat.id
        try:
            if len(info) != 4:
                bot.send_message(chat_id, '–ù–µ –≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞')
                bot.send_message(chat_id, '–≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ\n'
                                          '(—Ñ–∞–º–∏–ª–∏—è –∏–º—è —á–∏—Å–ª–æ –º–µ—Å—è—Ü)\n(–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω 1 10)\n')
            elif info[2] == '0' or int(info[2]) > 31:
                bot.send_message(chat_id, '–ù–µ –≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥ –î–ù–Ø —Ä–æ–∂–¥–µ–Ω–∏—è')

            else:

                day = Day.objects.get(day=info[2])
                id = Month.objects.get(id=info[3])
                user_chat = User.objects.get(user_chat=message.chat.id)

                surname_name = Birthday_boy.objects.filter(user=user_chat, surname=info[0], name=info[1]).first()
                if not surname_name:
                    Birthday_boy.objects.create(month=id, day=day, name=info[1], surname=info[0]).user.add(user_chat.id)
                    bot.send_message(chat_id, '–ò–º–µ–Ω–∏–Ω–Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!')
                else:
                    bot.send_message(chat_id, '–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Ç–∞–∫–æ–π –∏–º–µ–Ω–∏–Ω–Ω–∏–∫\n–Ω—É–∂–Ω–æ —Å–º–µ–Ω–∏—Ç—å —Ñ–∞–º–∏–ª–∏—é –∏–ª–∏ –∏–º—è')
        except ValueError:
            bot.send_message(chat_id, '–ß–∏—Å–ª–æ –∏ –º–µ—Å—è—Ü –Ω—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å —Ü–∏—Ñ—Ä–∞–º–∏')
        except ObjectDoesNotExist:
            bot.send_message(chat_id, '–ù–µ –≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥ –ú–ï–°–Ø–¶–ê —Ä–æ–∂–¥–µ–Ω–∏—è')

        info.clear()

    bot.polling()
